{"version":3,"sources":["./src/environments/environment.ts","./src/app/snake-game/objects/key-code.ts","./src/app/snake-game/objects/snake.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/snake-game/settings/global.ts","./src/app/app.module.ts","./src/app/snake-game/snake-game.component.ts","./src/app/snake-game/snake-game.component.html","./src/app/snake-game/objects/directions.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export enum KEY_CODE {\r\n  KEY_UP = 'ArrowUp',\r\n  KEY_DOWN = 'ArrowDown',\r\n  KEY_RIGHT = 'ArrowRight',\r\n  KEY_LEFT = 'ArrowLeft',\r\n}\r\n","import {SnakeBlock} from './snake-block';\r\nimport {BLOCK_SIZE, GRID_SIZE} from '../settings/global';\r\nimport {DIRECTIONS} from './directions';\r\n\r\nexport class Snake {\r\n  color;\r\n  readonly snakeBody: SnakeBlock[];\r\n\r\n  constructor(color: string) {\r\n    this.color = color;\r\n    this.snakeBody = [\r\n      {x: 4 * BLOCK_SIZE + 5 * GRID_SIZE, y: BLOCK_SIZE + (2 * GRID_SIZE)},\r\n      {x: 3 * BLOCK_SIZE + 4 * GRID_SIZE, y: BLOCK_SIZE + (2 * GRID_SIZE)},\r\n      {x: 2 * BLOCK_SIZE + 3 * GRID_SIZE, y: BLOCK_SIZE + (2 * GRID_SIZE)},\r\n      {x: 1 * BLOCK_SIZE + 2 * GRID_SIZE, y: BLOCK_SIZE + (2 * GRID_SIZE)}\r\n    ];\r\n  }\r\n\r\n  getSnake(): SnakeBlock[] {\r\n    return this.snakeBody;\r\n  }\r\n\r\n  private getSnakeHead(): SnakeBlock {\r\n    return this.snakeBody[0];\r\n  }\r\n\r\n  addBlockToSnake(): void {\r\n    this.snakeBody.push({\r\n      x: this.snakeBody[this.snakeBody.length - 1].x,\r\n      y: this.snakeBody[this.snakeBody.length - 1].y\r\n    });\r\n  }\r\n\r\n  moveSnakeTo(direction: DIRECTIONS): void {\r\n    this.snakeBody.pop();\r\n    if (direction === DIRECTIONS.RIGHT) {\r\n      this.snakeBody.unshift({x: this.getSnakeHead().x + BLOCK_SIZE + GRID_SIZE, y: this.getSnakeHead().y});\r\n    }\r\n    if (direction === DIRECTIONS.DOWN) {\r\n      this.snakeBody.unshift({x: this.getSnakeHead().x, y: this.getSnakeHead().y + BLOCK_SIZE + GRID_SIZE});\r\n    }\r\n    if (direction === DIRECTIONS.LEFT) {\r\n      this.snakeBody.unshift({x: this.getSnakeHead().x - BLOCK_SIZE - GRID_SIZE, y: this.getSnakeHead().y});\r\n    }\r\n    if (direction === DIRECTIONS.UP) {\r\n      this.snakeBody.unshift({x: this.getSnakeHead().x, y: this.getSnakeHead().y - BLOCK_SIZE - GRID_SIZE});\r\n    }\r\n  }\r\n\r\n  isHittingWall(width: number, height: number): boolean {\r\n    return this.getSnakeHead().x <= - BLOCK_SIZE || this.getSnakeHead().x >= width + BLOCK_SIZE ||\r\n      this.getSnakeHead().y <= - BLOCK_SIZE || this.getSnakeHead().y >= height + BLOCK_SIZE;\r\n  }\r\n\r\n  isEatingItself(): boolean {\r\n    const tempArray = [...this.snakeBody];\r\n    const tempSnakeBlock = tempArray.shift();\r\n    return tempArray.filter(e => e.x === tempSnakeBlock.x && e.y === tempSnakeBlock.y).length > 0;\r\n  }\r\n\r\n  isEatingApple(apple: SnakeBlock): boolean {\r\n    return (this.getSnakeHead().x === apple.x && this.getSnakeHead().y === apple.y);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'snakeNg';\r\n}\r\n","<app-snake-game></app-snake-game>\r\n","export const BLOCK_SIZE = 30;\r\nexport const COLS = 20;\r\nexport const ROWS = 20;\r\nexport const GRID_SIZE = 1;\r\nexport const SNAKE_COLOR = 'green';\r\nexport const APPLE_COLOR = 'red';\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SnakeGameComponent } from './snake-game/snake-game.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SnakeGameComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, ElementRef, HostListener, OnInit, ViewChild} from '@angular/core';\r\nimport {Snake} from './objects/snake';\r\nimport {APPLE_COLOR, BLOCK_SIZE, COLS, GRID_SIZE, ROWS, SNAKE_COLOR} from './settings/global';\r\nimport {DIRECTIONS} from './objects/directions';\r\nimport {KEY_CODE} from './objects/key-code';\r\n\r\n@Component({\r\n  selector: 'app-snake-game',\r\n  templateUrl: './snake-game.component.html',\r\n  styleUrls: ['./snake-game.component.css']\r\n})\r\nexport class SnakeGameComponent implements OnInit {\r\n  @ViewChild('snake', {static: true})\r\n  private canvasSnake: ElementRef<HTMLCanvasElement>;\r\n  private ctx: CanvasRenderingContext2D;\r\n  points: number;\r\n  snakeBlocks: number;\r\n  speed = 1;\r\n  private time = {start: 0, elapsed: 0, total: 2000};\r\n  private snake: Snake;\r\n  private movingDirection: DIRECTIONS;\r\n  private currentFrameId: number;\r\n  isRunning = false;\r\n  private apple;\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.ctx = this.canvasSnake.nativeElement.getContext('2d');\r\n    this.ctx.canvas.width = COLS * BLOCK_SIZE + (COLS * GRID_SIZE + 1);\r\n    this.ctx.canvas.height = ROWS * BLOCK_SIZE + (COLS * GRID_SIZE + 1);\r\n    this.snake = new Snake(SNAKE_COLOR);\r\n    this.drawSnake();\r\n    this.resetStats();\r\n  }\r\n\r\n  @HostListener('window:keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent): void {\r\n    if (event.code === KEY_CODE.KEY_DOWN) {\r\n      this.movingDirection = DIRECTIONS.DOWN;\r\n    }\r\n    if (event.code === KEY_CODE.KEY_UP) {\r\n      this.movingDirection = DIRECTIONS.UP;\r\n    }\r\n    if (event.code === KEY_CODE.KEY_LEFT) {\r\n      this.movingDirection = DIRECTIONS.LEFT;\r\n    }\r\n    if (event.code === KEY_CODE.KEY_RIGHT) {\r\n      this.movingDirection = DIRECTIONS.RIGHT;\r\n    }\r\n  }\r\n\r\n  playGame(): void {\r\n    this.isRunning = true;\r\n    this.resetGame();\r\n    this.time.start = performance.now();\r\n    this.randomApple();\r\n    requestAnimationFrame((now) => this.animate(now));\r\n  }\r\n\r\n  resumeGame(): void {\r\n    this.isRunning = !this.isRunning;\r\n    this.time.start = performance.now();\r\n    requestAnimationFrame((now) => this.animate(now));\r\n  }\r\n\r\n  pauseGame(): void {\r\n    this.isRunning = !this.isRunning;\r\n    cancelAnimationFrame(this.currentFrameId);\r\n  }\r\n\r\n  resetGame(): void {\r\n    this.isRunning = false;\r\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.snake = new Snake(SNAKE_COLOR);\r\n    this.movingDirection = DIRECTIONS.RIGHT;\r\n    cancelAnimationFrame(this.currentFrameId);\r\n    this.resetStats();\r\n    this.drawSnake();\r\n  }\r\n\r\n  private gameOver(): void {\r\n    cancelAnimationFrame(this.currentFrameId);\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.font = '46px \\'Press Start 2P\\'';\r\n    this.ctx.textAlign = 'center';\r\n    this.ctx.fillText('Game Over!', this.ctx.canvas.width / 2, this.ctx.canvas.height / 2);\r\n    this.ctx.font = '36px \\'Press Start 2P\\'';\r\n    this.ctx.fillText('Your score: ' + this.points, this.ctx.canvas.width / 2, this.ctx.canvas.height / 2 + 100);\r\n  }\r\n\r\n  private animate(now): void {\r\n    this.time.elapsed = now - this.time.start;\r\n    if (this.time.elapsed > 250) {\r\n      this.drawFrame();\r\n      this.time.start = now;\r\n    }\r\n    this.currentFrameId = requestAnimationFrame((timestamp) => this.animate(timestamp));\r\n    if (this.snake.isEatingItself() || this.snake.isHittingWall(this.ctx.canvas.width, this.ctx.canvas.height)) {\r\n      this.gameOver();\r\n    }\r\n    if (this.snake.isEatingApple(this.apple)) {\r\n      this.snake.addBlockToSnake();\r\n      this.randomApple();\r\n    }\r\n  }\r\n\r\n  private drawFrame(): void {\r\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.updateStats();\r\n    this.drawSnake();\r\n    this.drawApple();\r\n    this.snake.moveSnakeTo(this.movingDirection);\r\n  }\r\n\r\n  private updateStats(): void {\r\n    this.points++;\r\n    this.snakeBlocks = this.snake.snakeBody.length;\r\n  }\r\n\r\n  private resetStats(): void {\r\n    this.points = 0;\r\n    this.snakeBlocks = this.snake.getSnake().length;\r\n  }\r\n\r\n  private drawApple(): void {\r\n    this.drawRoundedCornerRec(this.apple.x, this.apple.y, BLOCK_SIZE, BLOCK_SIZE, 20, APPLE_COLOR);\r\n  }\r\n\r\n  private randomApple(): void {\r\n    const random1 = Math.floor(Math.random() * COLS - 1) + 1;\r\n    const random2 = Math.floor(Math.random() * ROWS - 1) + 1;\r\n    this.apple = {x: random1 * BLOCK_SIZE + random1 + GRID_SIZE, y: random2 * BLOCK_SIZE + random2 + GRID_SIZE};\r\n  }\r\n\r\n  private drawSnake(): void {\r\n    this.snake.getSnake().forEach(snakeBlock => {\r\n      this.drawRoundedCornerRec(snakeBlock.x, snakeBlock.y, BLOCK_SIZE, BLOCK_SIZE, 20, this.snake.color);\r\n    });\r\n  }\r\n\r\n  private drawRoundedCornerRec(x: number, y: number, width: number, height: number, radius: number, color: string): void {\r\n    this.ctx.lineJoin = 'round';\r\n    this.ctx.lineWidth = radius;\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.strokeRect(x + (radius / 2), y + (radius / 2), width - radius, height - radius);\r\n    this.ctx.fillRect(x + (radius / 2), y + (radius / 2), width - radius, height - radius);\r\n  }\r\n}\r\n","<div class=\"grid\">\r\n  <canvas #snake class=\"game-board\"></canvas>\r\n  <div class=\"right-column\">\r\n    <div>\r\n      <h1>SNAKE</h1>\r\n      <p>Score: {{ points }}</p>\r\n      <p>Snake blocks: {{ snakeBlocks }}</p>\r\n      <p>Speed: {{ speed + 'x' }}</p>\r\n    </div>\r\n    <div class=\"button-container\">\r\n      <button (click)=\"playGame()\" class=\"play-button button\">\r\n        New Game\r\n      </button>\r\n    </div>\r\n    <ng-container *ngIf=\"!isRunning; then pause; else resume\"></ng-container>\r\n    <ng-template #pause>\r\n      <div class=\"button-container\">\r\n        <button (click)=\"pauseGame()\" class=\"pause-button button\">\r\n          Pause Game\r\n        </button>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #resume>\r\n      <div class=\"button-container\">\r\n        <button (click)=\"resumeGame()\" class=\"pause-button button\">\r\n          Resume Game\r\n        </button>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <div class=\"button-container\">\r\n      <button (click)=\"resetGame()\" class=\"pause-button button\">\r\n        Reset Game\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export enum DIRECTIONS {\r\n  UP, DOWN, RIGHT, LEFT\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}