{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/snake-game/objects/key-code.ts","webpack:///src/app/snake-game/objects/snake.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/snake-game/settings/global.ts","webpack:///src/app/app.module.ts","webpack:///src/app/snake-game/snake-game.component.ts","webpack:///src/app/snake-game/snake-game.component.html","webpack:///src/app/snake-game/objects/directions.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","KEY_CODE","Snake","color","snakeBody","x","y","push","length","direction","pop","RIGHT","unshift","getSnakeHead","DOWN","LEFT","UP","width","height","tempArray","tempSnakeBlock","shift","filter","e","apple","AppComponent","title","BLOCK_SIZE","COLS","ROWS","GRID_SIZE","SNAKE_COLOR","APPLE_COLOR","AppModule","SnakeGameComponent","speed","time","start","elapsed","total","isRunning","ctx","canvasSnake","nativeElement","getContext","canvas","snake","drawSnake","resetStats","event","code","KEY_DOWN","movingDirection","KEY_UP","KEY_LEFT","KEY_RIGHT","resetGame","performance","now","randomApple","requestAnimationFrame","animate","cancelAnimationFrame","currentFrameId","clearRect","fillStyle","font","textAlign","fillText","points","drawFrame","timestamp","isEatingItself","isHittingWall","gameOver","isEatingApple","addBlockToSnake","updateStats","drawApple","moveSnakeTo","snakeBlocks","getSnake","drawRoundedCornerRec","random1","Math","floor","random","random2","forEach","snakeBlock","radius","lineJoin","lineWidth","strokeStyle","strokeRect","fillRect","playGame","DIRECTIONS","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export enum KEY_CODE {\r\n  KEY_UP = 'ArrowUp',\r\n  KEY_DOWN = 'ArrowDown',\r\n  KEY_RIGHT = 'ArrowRight',\r\n  KEY_LEFT = 'ArrowLeft',\r\n}\r\n","import {SnakeBlock} from './snake-block';\r\nimport {BLOCK_SIZE, GRID_SIZE} from '../settings/global';\r\nimport {DIRECTIONS} from './directions';\r\n\r\nexport class Snake {\r\n  color;\r\n  readonly snakeBody: SnakeBlock[];\r\n\r\n  constructor(color: string) {\r\n    this.color = color;\r\n    this.snakeBody = [\r\n      {x: 4 * BLOCK_SIZE + 5 * GRID_SIZE, y: BLOCK_SIZE + (2 * GRID_SIZE)},\r\n      {x: 3 * BLOCK_SIZE + 4 * GRID_SIZE, y: BLOCK_SIZE + (2 * GRID_SIZE)},\r\n      {x: 2 * BLOCK_SIZE + 3 * GRID_SIZE, y: BLOCK_SIZE + (2 * GRID_SIZE)},\r\n      {x: 1 * BLOCK_SIZE + 2 * GRID_SIZE, y: BLOCK_SIZE + (2 * GRID_SIZE)}\r\n    ];\r\n  }\r\n\r\n  getSnake(): SnakeBlock[] {\r\n    return this.snakeBody;\r\n  }\r\n\r\n  private getSnakeHead(): SnakeBlock {\r\n    return this.snakeBody[0];\r\n  }\r\n\r\n  addBlockToSnake(): void {\r\n    this.snakeBody.push({\r\n      x: this.snakeBody[this.snakeBody.length - 1].x,\r\n      y: this.snakeBody[this.snakeBody.length - 1].y\r\n    });\r\n  }\r\n\r\n  moveSnakeTo(direction: DIRECTIONS): void {\r\n    this.snakeBody.pop();\r\n    if (direction === DIRECTIONS.RIGHT) {\r\n      this.snakeBody.unshift({x: this.getSnakeHead().x + BLOCK_SIZE + GRID_SIZE, y: this.getSnakeHead().y});\r\n    }\r\n    if (direction === DIRECTIONS.DOWN) {\r\n      this.snakeBody.unshift({x: this.getSnakeHead().x, y: this.getSnakeHead().y + BLOCK_SIZE + GRID_SIZE});\r\n    }\r\n    if (direction === DIRECTIONS.LEFT) {\r\n      this.snakeBody.unshift({x: this.getSnakeHead().x - BLOCK_SIZE - GRID_SIZE, y: this.getSnakeHead().y});\r\n    }\r\n    if (direction === DIRECTIONS.UP) {\r\n      this.snakeBody.unshift({x: this.getSnakeHead().x, y: this.getSnakeHead().y - BLOCK_SIZE - GRID_SIZE});\r\n    }\r\n  }\r\n\r\n  isHittingWall(width: number, height: number): boolean {\r\n    return this.getSnakeHead().x <= - BLOCK_SIZE || this.getSnakeHead().x >= width + BLOCK_SIZE ||\r\n      this.getSnakeHead().y <= - BLOCK_SIZE || this.getSnakeHead().y >= height + BLOCK_SIZE;\r\n  }\r\n\r\n  isEatingItself(): boolean {\r\n    const tempArray = [...this.snakeBody];\r\n    const tempSnakeBlock = tempArray.shift();\r\n    return tempArray.filter(e => e.x === tempSnakeBlock.x && e.y === tempSnakeBlock.y).length > 0;\r\n  }\r\n\r\n  isEatingApple(apple: SnakeBlock): boolean {\r\n    return (this.getSnakeHead().x === apple.x && this.getSnakeHead().y === apple.y);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'snakeNg';\r\n}\r\n","<app-snake-game></app-snake-game>\r\n","export const BLOCK_SIZE = 30;\r\nexport const COLS = 20;\r\nexport const ROWS = 20;\r\nexport const GRID_SIZE = 1;\r\nexport const SNAKE_COLOR = 'green';\r\nexport const APPLE_COLOR = 'red';\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SnakeGameComponent } from './snake-game/snake-game.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SnakeGameComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, ElementRef, HostListener, OnInit, ViewChild} from '@angular/core';\r\nimport {Snake} from './objects/snake';\r\nimport {APPLE_COLOR, BLOCK_SIZE, COLS, GRID_SIZE, ROWS, SNAKE_COLOR} from './settings/global';\r\nimport {DIRECTIONS} from './objects/directions';\r\nimport {KEY_CODE} from './objects/key-code';\r\n\r\n@Component({\r\n  selector: 'app-snake-game',\r\n  templateUrl: './snake-game.component.html',\r\n  styleUrls: ['./snake-game.component.css']\r\n})\r\nexport class SnakeGameComponent implements OnInit {\r\n  @ViewChild('snake', {static: true})\r\n  private canvasSnake: ElementRef<HTMLCanvasElement>;\r\n  private ctx: CanvasRenderingContext2D;\r\n  points: number;\r\n  snakeBlocks: number;\r\n  speed = 1;\r\n  private time = {start: 0, elapsed: 0, total: 2000};\r\n  private snake: Snake;\r\n  private movingDirection: DIRECTIONS;\r\n  private currentFrameId: number;\r\n  isRunning = false;\r\n  private apple;\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.ctx = this.canvasSnake.nativeElement.getContext('2d');\r\n    this.ctx.canvas.width = COLS * BLOCK_SIZE + (COLS * GRID_SIZE + 1);\r\n    this.ctx.canvas.height = ROWS * BLOCK_SIZE + (COLS * GRID_SIZE + 1);\r\n    this.snake = new Snake(SNAKE_COLOR);\r\n    this.drawSnake();\r\n    this.resetStats();\r\n  }\r\n\r\n  @HostListener('window:keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent): void {\r\n    if (event.code === KEY_CODE.KEY_DOWN) {\r\n      this.movingDirection = DIRECTIONS.DOWN;\r\n    }\r\n    if (event.code === KEY_CODE.KEY_UP) {\r\n      this.movingDirection = DIRECTIONS.UP;\r\n    }\r\n    if (event.code === KEY_CODE.KEY_LEFT) {\r\n      this.movingDirection = DIRECTIONS.LEFT;\r\n    }\r\n    if (event.code === KEY_CODE.KEY_RIGHT) {\r\n      this.movingDirection = DIRECTIONS.RIGHT;\r\n    }\r\n  }\r\n\r\n  playGame(): void {\r\n    this.isRunning = true;\r\n    this.resetGame();\r\n    this.time.start = performance.now();\r\n    this.randomApple();\r\n    requestAnimationFrame((now) => this.animate(now));\r\n  }\r\n\r\n  resumeGame(): void {\r\n    this.isRunning = !this.isRunning;\r\n    this.time.start = performance.now();\r\n    requestAnimationFrame((now) => this.animate(now));\r\n  }\r\n\r\n  pauseGame(): void {\r\n    this.isRunning = !this.isRunning;\r\n    cancelAnimationFrame(this.currentFrameId);\r\n  }\r\n\r\n  resetGame(): void {\r\n    this.isRunning = false;\r\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.snake = new Snake(SNAKE_COLOR);\r\n    this.movingDirection = DIRECTIONS.RIGHT;\r\n    cancelAnimationFrame(this.currentFrameId);\r\n    this.resetStats();\r\n    this.drawSnake();\r\n  }\r\n\r\n  private gameOver(): void {\r\n    cancelAnimationFrame(this.currentFrameId);\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.font = '46px \\'Press Start 2P\\'';\r\n    this.ctx.textAlign = 'center';\r\n    this.ctx.fillText('Game Over!', this.ctx.canvas.width / 2, this.ctx.canvas.height / 2);\r\n    this.ctx.font = '36px \\'Press Start 2P\\'';\r\n    this.ctx.fillText('Your score: ' + this.points, this.ctx.canvas.width / 2, this.ctx.canvas.height / 2 + 100);\r\n  }\r\n\r\n  private animate(now): void {\r\n    this.time.elapsed = now - this.time.start;\r\n    if (this.time.elapsed > 250) {\r\n      this.drawFrame();\r\n      this.time.start = now;\r\n    }\r\n    this.currentFrameId = requestAnimationFrame((timestamp) => this.animate(timestamp));\r\n    if (this.snake.isEatingItself() || this.snake.isHittingWall(this.ctx.canvas.width, this.ctx.canvas.height)) {\r\n      this.gameOver();\r\n    }\r\n    if (this.snake.isEatingApple(this.apple)) {\r\n      this.snake.addBlockToSnake();\r\n      this.randomApple();\r\n    }\r\n  }\r\n\r\n  private drawFrame(): void {\r\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.updateStats();\r\n    this.drawSnake();\r\n    this.drawApple();\r\n    this.snake.moveSnakeTo(this.movingDirection);\r\n  }\r\n\r\n  private updateStats(): void {\r\n    this.points++;\r\n    this.snakeBlocks = this.snake.snakeBody.length;\r\n  }\r\n\r\n  private resetStats(): void {\r\n    this.points = 0;\r\n    this.snakeBlocks = this.snake.getSnake().length;\r\n  }\r\n\r\n  private drawApple(): void {\r\n    this.drawRoundedCornerRec(this.apple.x, this.apple.y, BLOCK_SIZE, BLOCK_SIZE, 20, APPLE_COLOR);\r\n  }\r\n\r\n  private randomApple(): void {\r\n    const random1 = Math.floor(Math.random() * COLS - 1) + 1;\r\n    const random2 = Math.floor(Math.random() * ROWS - 1) + 1;\r\n    this.apple = {x: random1 * BLOCK_SIZE + random1 + GRID_SIZE, y: random2 * BLOCK_SIZE + random2 + GRID_SIZE};\r\n  }\r\n\r\n  private drawSnake(): void {\r\n    this.snake.getSnake().forEach(snakeBlock => {\r\n      this.drawRoundedCornerRec(snakeBlock.x, snakeBlock.y, BLOCK_SIZE, BLOCK_SIZE, 20, this.snake.color);\r\n    });\r\n  }\r\n\r\n  private drawRoundedCornerRec(x: number, y: number, width: number, height: number, radius: number, color: string): void {\r\n    this.ctx.lineJoin = 'round';\r\n    this.ctx.lineWidth = radius;\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.strokeRect(x + (radius / 2), y + (radius / 2), width - radius, height - radius);\r\n    this.ctx.fillRect(x + (radius / 2), y + (radius / 2), width - radius, height - radius);\r\n  }\r\n}\r\n","<div class=\"grid\">\r\n  <canvas #snake class=\"game-board\"></canvas>\r\n  <div class=\"right-column\">\r\n    <div>\r\n      <h1>SNAKE</h1>\r\n      <p>Score: {{ points }}</p>\r\n      <p>Snake blocks: {{ snakeBlocks }}</p>\r\n      <p>Speed: {{ speed + 'x' }}</p>\r\n    </div>\r\n    <div class=\"button-container\">\r\n      <button (click)=\"playGame()\" class=\"play-button button\">\r\n        New Game\r\n      </button>\r\n    </div>\r\n    <ng-container *ngIf=\"!isRunning; then pause; else resume\"></ng-container>\r\n    <ng-template #pause>\r\n      <div class=\"button-container\">\r\n        <button (click)=\"pauseGame()\" class=\"pause-button button\">\r\n          Pause Game\r\n        </button>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #resume>\r\n      <div class=\"button-container\">\r\n        <button (click)=\"resumeGame()\" class=\"pause-button button\">\r\n          Resume Game\r\n        </button>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <div class=\"button-container\">\r\n      <button (click)=\"resetGame()\" class=\"pause-button button\">\r\n        Reset Game\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export enum DIRECTIONS {\r\n  UP, DOWN, RIGHT, LEFT\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}